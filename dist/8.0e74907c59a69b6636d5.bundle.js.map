{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/reselect/es/index.js","webpack:///./src/state/images/selectors.ts","webpack:///./src/pages/images/containers/withImages.tsx","webpack:///./src/pages/images/containers/withImage.tsx","webpack:///./src/pages/view/imageRouteModal.tsx","webpack:///./src/pages/images/page.tsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","defaultEqualityCheck","a","b","createSelector","memoize","_len","arguments","length","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","getImagesToArray","state","images","values_default","mapStateToProps","ownProps","mapDispatchToProps","fetchImages","actions","containers_withImages","Cmp","es","Component","_super","class_1","__extends","prototype","componentDidMount","this","props","render","react_default","createElement","__assign","withImage_mapStateToProps","imageID","match","id","image","containers_withImage","imageRouteModal_CenterModal","CenterModal","imageRouteModal_extends","componentDidUpdate","prevProps","_a","onClose","isOpen","location","pathname","react_dom_default","createPortal","className","title","src","link","width","height","onClick","document","body","react","imageRouteModal","react_router","__webpack_exports__","dist_es","_b","t","history","key","react_router_dom","to","path","goBack"],"mappings":"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","file":"8.0e74907c59a69b6636d5.bundle.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import values from 'lodash/values';\nimport { createSelector, OutputSelector } from 'reselect';\n\nconst imagesById = (state: RootState) => state.images;\n\nexport const getImagesToArray: OutputSelector<\n  RootState,\n  Image[],\n  (res: ImagesMap) => Image[]\n> = createSelector([imagesById], (images): Image[] => values(images));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Images from '../../../state/images/actions';\nimport { getImagesToArray } from '../../../state/images/selectors';\n\nconst mapStateToProps = <T extends {}>(state: RootState, ownProps: T) => {\n  const images = getImagesToArray(state);\n\n  return {\n    images\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchImages: Images.Actions.fetchImages\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\nexport type WithImagesProps = StateProps & DispatchProps;\n\n\nconst ImagesFetcher = <P extends {}>(Component: React.ComponentType<P>) =>\n  class extends React.Component<P & WithImagesProps> {\n    public componentDidMount() {\n      if (!this.props.images.length) {\n        this.props.fetchImages('wheredidthesodago');\n      }\n    }\n\n    public render() {\n      return <Component {...this.props} />;\n    }\n  };\n\n/**\n * Connecter that fetches and adds props.images[];\n * @param {React.ComponentType} Cmp React Component to be wrapped\n */\nexport const withImages = <P extends any>(Cmp: React.ComponentType<P>) =>\n  connect<StateProps, DispatchProps, Subtract<P, WithImagesProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(ImagesFetcher(Cmp));\n\nexport default withImages;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Images from '../../../state/images/actions';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface RequiredProps extends RouteComponentProps<{id: string}>{}\n\nconst mapStateToProps = <T extends {}>(state: RootState, ownProps: T & RequiredProps) => {\n    const imageID = ownProps.match.params.id;\n    return {\n        image: state.images[imageID]\n    }\n};\n\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\nexport type WithImageProps = StateProps;\n\n\n/**\n * Connecter that fetches and adds props.image;\n * @param {React.ComponentType} Cmp React Component to be wrapped\n */\nexport const withImage = <P extends any>(Cmp: React.ComponentType<P>) =>\n    connect<StateProps, null, Subtract<P, WithImageProps>>(\n        mapStateToProps\n    )(Cmp);\n\nexport default withImage;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport withImage, { WithImageProps } from '../images/containers/withImage';\n\nexport interface ImageModalProps extends RouteComponentProps<{id: string}> {\n  onClose: (evt: any) => void;\n}\n\nconst evaluateRenderProp: (\n  prop: string | React.ReactNode | (() => React.ReactNode)\n) => React.ReactNode = prop => {\n  return prop instanceof Function ? prop() : prop;\n};\n\nexport class CenterModal extends Component<\nImageModalProps\n& WithImageProps\n> {\n  public componentDidUpdate(prevProps: ImageModalProps) {\n    // modalWillReceiveProps(this.props, prevProps);\n  }\n\n  public render() {\n    const { onClose, image, location: { pathname } } = this.props;\n    const isOpen = pathname === '/view/:id';\n\n    return image ? ReactDOM.createPortal(\n        <div className={'image-modal' }>\n            <div className=\"title\">{image.title}</div>\n            <img src={image && image.link} width={image.width} height={image.height}/>\n            <div className={`modal-mask ${isOpen ? 'is-visible' : ''}`} onClick={onClose}/>\n        </div>,\n      document.body\n    ) : '';\n  }\n}\n\nexport default withRouter(withImage(CenterModal));\n","import React from 'react';\nimport { Route, withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport withImages, { WithImagesProps } from './containers/withImages'\nimport { withTranslation, WithTranslation } from 'react-i18next'; \nimport ImageModal from '../view/imageRouteModal';\nconst Images: React.FC<\n  WithImagesProps\n& WithTranslation\n& RouteComponentProps\n> = ({\n    images = [],\n    t,\n    history,\n    location,\n    match \n}) => {\n  return (\n      <div className=\"images-page\" >\n        <h1>{t('heading')}</h1>\n        <ul>\n        {\n          images.map((image) => {\n            return (\n            <li key={image.id}>\n              <Link to={`${match.path}/view/${image.id}`}>{image.title}</Link>\n            </li>);\n          })\n\n        }\n        </ul>\n        <Route\n          path={`${match.path}/view/:id`}\n          render={() => (\n            <ImageModal onClose={history.goBack}/>\n          )}\n        />\n      </div>\n  );\n}\n\nexport default withRouter(\n  withImages(\n    withTranslation('images')(Images)\n  )\n);\n"],"sourceRoot":""}